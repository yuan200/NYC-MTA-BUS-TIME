apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

android {
    compileSdkVersion 29
    buildToolsVersion "30.0.2"

    def versionPropsFile = file("version.properties")
    def buildNumber

    if (versionPropsFile.canRead()) {
        def versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        buildNumber = versionProps['BUILD_NUMBER'].toInteger()
    } else
        throw new FileNotFoundException("Could not read version.properties")

    defaultConfig {
        applicationId "com.wen.android.mtabuscomparison"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode buildNumber
        versionName "2.07" + "." + buildNumber.toString()
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        javaCompileOptions {
            kapt {
                arguments {
                    arg("room.schemaLocation", "$projectDir/schemas")
                }
            }
        }

    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue 'string', "google_map_api_key", NycMtaBusTime_googleApiKey
            resValue 'string', "mta_bus_api_key", MtaBusApiKey
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            resValue 'string', "google_map_api_key", NycMtaBusTime_googleApiKey
            resValue 'string', "mta_bus_api_key", MtaBusApiKey
        }
    }
    // used by Room, to test migrations

    sourceSets {
        // Adds exported schema location as test app assets.
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    ext.autoIncrementBuildNumber = {
        if (versionPropsFile.canRead()) {
            def versionProps = new Properties()
            versionProps.load(new FileInputStream(versionPropsFile))
            buildNumber = versionProps['BUILD_NUMBER'].toInteger() + 1
            versionProps['BUILD_NUMBER'] = buildNumber.toString()
            versionProps.store(versionPropsFile.newWriter(), null)
        } else
            throw new FileNotFoundException("Could not read and write version.properties")
    }

    gradle.taskGraph.whenReady {
        taskGraph ->
            def taskReqStr = getGradle().getStartParameter().getTaskRequests().toString()
            if (taskReqStr.contains("assemble")) {
                def taskName = ":app:assembleRelease"
                if (taskGraph.hasTask(taskName)) {
                    autoIncrementBuildNumber()
                }
            }
    }
}

buildscript {
    repositories {
        jcenter()
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    androidTestImplementation('androidx.test.espresso:espresso-core:3.3.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.2.1'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    implementation "androidx.core:core-ktx:+"

    def play_service_version = "17.0.0"
    implementation "com.google.android.gms:play-services-maps:$play_service_version"
    implementation "com.google.android.gms:play-services-places:$play_service_version"
    implementation "com.google.android.gms:play-services-location:$play_service_version"

    def room_version = "2.2.6"
    implementation "androidx.room:room-runtime:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    //firebase
    implementation platform('com.google.firebase:firebase-bom:26.4.0')
    implementation 'com.google.firebase:firebase-crashlytics:17.3.1'
    implementation 'com.google.firebase:firebase-analytics:18.0.2'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    //todo deprecated
    implementation 'com.github.aakira:expandable-layout:1.6.0@aar'

    implementation "com.google.code.gson:gson:2.8.6"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    androidTestImplementation 'androidx.test:core:1.1.0'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'

    implementation 'com.jakewharton.timber:timber:4.7.1'

    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test:runner:1.1.0'
    androidTestImplementation 'androidx.test:rules:1.1.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    androidTestImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    androidTestImplementation "androidx.room:room-testing:$room_version"
    kaptAndroidTest "androidx.room:room-testing:$room_version"

    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"
}

repositories {
    maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
    mavenCentral()
}
